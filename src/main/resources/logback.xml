<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--%m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,,-->
    <property name="log.default_pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS}|%-5level|%X{traceId}|%logger{1}|%msg%n"/>
    <property name="log.default_max_history" value="14"/>
    <property name="log.default_charset" value="UTF-8"/>
    <property name="log.home" value="logs"/>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--输出日志格式-->
            <pattern>${log.default_pattern}</pattern>
            <charset>${log.default_charset}</charset>
        </encoder>
    </appender>

    <!--RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件-->
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.home}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.home}/archives/info.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${log.default_max_history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.default_pattern}</pattern>
            <charset>${log.default_charset}</charset>
        </encoder>
    </appender>

    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <file>${log.home}/error.log</file>
        <!--rollingPolicy:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名-->
        <!--TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动-->
        <rollingPolicy  class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次-->
            <fileNamePattern>${log.home}/archives/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--每产生一个日志文件，该日志文件的最大保存期限-->
            <maxHistory>${log.default_max_history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.default_pattern}</pattern>
            <charset>${log.default_charset}</charset>
        </encoder>
    </appender>

    <!-- 数据库日志 -->
    <appender name="db_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.home}/db_info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.home}/archives/db_info.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${log.default_max_history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.default_pattern}</pattern>
            <charset>${log.default_charset}</charset>
        </encoder>
    </appender>

    <!-- 请求日志 -->
    <appender name="request" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.home}/request.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.home}/archives/request.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${log.default_max_history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.default_pattern}</pattern>
            <charset>${log.default_charset}</charset>
        </encoder>
    </appender>

    <!--控制台输出日志级别-->
    <root level="INFO">
        <appender-ref ref="console"/>
        <appender-ref ref="info"/>
        <appender-ref ref="error"/>
    </root>
    <!--指定项目中某个包，当有日志操作行为时的日志记录级别-->
    <!--级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE-->
    <logger name="request" level="DEBUG" additivity="false">
        <appender-ref ref="request"/>
    </logger>
    <logger name="db_info" level="INFO" additivity="false">
        <appender-ref ref="db_info" />
        <appender-ref ref="console" />
    </logger>

</configuration>